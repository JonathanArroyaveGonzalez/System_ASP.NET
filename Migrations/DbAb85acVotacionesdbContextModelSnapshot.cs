// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VotingSystem.Models;

#nullable disable

namespace VotingSystem.Migrations
{
    [DbContext(typeof(DbAb85acVotacionesdbContext))]
    partial class DbAb85acVotacionesdbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VotingSystem.Models.Asamblea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Acta")
                        .HasColumnType("text")
                        .HasColumnName("acta");

                    b.Property<int>("CreadorId")
                        .HasColumnType("int")
                        .HasColumnName("creador_id");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<string>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("programada")
                        .HasColumnName("estado");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha");

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("titulo");

                    b.HasKey("Id")
                        .HasName("PK__Asamblea__3213E83FB30A2E56");

                    b.HasIndex("CreadorId");

                    b.HasIndex(new[] { "Estado" }, "idx_estado");

                    b.HasIndex(new[] { "Fecha" }, "idx_fecha");

                    b.ToTable("Asamblea", (string)null);
                });

            modelBuilder.Entity("VotingSystem.Models.Notificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("contenido");

                    b.Property<string>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("pendiente")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_creacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaEnvio")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_envio");

                    b.Property<DateTime?>("FechaLectura")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_lectura");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipo");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("titulo");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id")
                        .HasName("PK__Notifica__3213E83FCCDAF6FE");

                    b.HasIndex("UsuarioId");

                    b.HasIndex(new[] { "Estado" }, "idx_estado_notificacion");

                    b.HasIndex(new[] { "FechaCreacion", "FechaEnvio", "FechaLectura" }, "idx_fechas_notificacion");

                    b.ToTable("Notificacion", (string)null);
                });

            modelBuilder.Entity("VotingSystem.Models.OpcionVotacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<int?>("Orden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("orden");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("texto");

                    b.Property<int>("VotacionId")
                        .HasColumnType("int")
                        .HasColumnName("votacion_id");

                    b.HasKey("Id")
                        .HasName("PK__OpcionVo__3213E83F25C6E54F");

                    b.HasIndex("VotacionId");

                    b.HasIndex(new[] { "Orden" }, "idx_orden");

                    b.ToTable("OpcionVotacion", (string)null);
                });

            modelBuilder.Entity("VotingSystem.Models.Reporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaGeneracion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_generacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Formato")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("formato");

                    b.Property<int>("GeneradoPor")
                        .HasColumnType("int")
                        .HasColumnName("generado_por");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipo");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("titulo");

                    b.Property<string>("UrlArchivo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("url_archivo");

                    b.HasKey("Id")
                        .HasName("PK__Reporte__3213E83F61D7FB49");

                    b.HasIndex("GeneradoPor");

                    b.HasIndex(new[] { "FechaGeneracion" }, "idx_fecha_reporte");

                    b.HasIndex(new[] { "Tipo" }, "idx_tipo");

                    b.ToTable("Reporte", (string)null);
                });

            modelBuilder.Entity("VotingSystem.Models.Restriccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int")
                        .HasColumnName("creado_por");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_fin");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_inicio");

                    b.Property<string>("Motivo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("motivo");

                    b.Property<string>("TipoRestriccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipo_restriccion");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id")
                        .HasName("PK__Restricc__3213E83F71BA252E");

                    b.HasIndex("CreadoPor");

                    b.HasIndex(new[] { "FechaInicio", "FechaFin" }, "idx_fechas");

                    b.HasIndex(new[] { "UsuarioId" }, "idx_usuario");

                    b.ToTable("Restriccion", (string)null);
                });

            modelBuilder.Entity("VotingSystem.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("apellido");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("activo")
                        .HasColumnName("estado");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_registro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("miembro")
                        .HasColumnName("rol");

                    b.Property<DateTime?>("UltimoAcceso")
                        .HasColumnType("datetime")
                        .HasColumnName("ultimo_acceso");

                    b.HasKey("Id")
                        .HasName("PK__Usuario__3213E83F20EA9486");

                    b.HasIndex(new[] { "Email" }, "UQ__Usuario__AB6E616447B8B9FE")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "idx_email");

                    b.HasIndex(new[] { "Estado" }, "idx_estado_usuario");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("VotingSystem.Models.Votacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AsambleaId")
                        .HasColumnType("int")
                        .HasColumnName("asamblea_id");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<string>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("pendiente")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_fin");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_inicio");

                    b.Property<decimal?>("QuorumRequerido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5, 4)")
                        .HasDefaultValue(5m)
                        .HasColumnName("quorum_requerido");

                    b.Property<string>("TipoVotacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipo_votacion");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("titulo");

                    b.HasKey("Id")
                        .HasName("PK__Votacion__3213E83F0663BCAC");

                    b.HasIndex("AsambleaId");

                    b.HasIndex(new[] { "Estado" }, "idx_estado_votacion");

                    b.HasIndex(new[] { "FechaInicio", "FechaFin" }, "idx_fechas_votacion");

                    b.ToTable("Votacion", (string)null);
                });

            modelBuilder.Entity("VotingSystem.Models.Voto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("IpOrigen")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ip_origen");

                    b.Property<int>("OpcionId")
                        .HasColumnType("int")
                        .HasColumnName("opcion_id");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.Property<decimal?>("ValorPonderado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 4)")
                        .HasDefaultValue(10000m)
                        .HasColumnName("valor_ponderado");

                    b.Property<int>("VotacionId")
                        .HasColumnType("int")
                        .HasColumnName("votacion_id");

                    b.HasKey("Id")
                        .HasName("PK__Voto__3213E83FD7FC7F56");

                    b.HasIndex("UsuarioId");

                    b.HasIndex(new[] { "Fecha" }, "idx_fecha_voto");

                    b.HasIndex(new[] { "VotacionId", "UsuarioId" }, "uk_voto_usuario")
                        .IsUnique();

                    b.ToTable("Voto", (string)null);
                });

            modelBuilder.Entity("VotingSystem.Models.Asamblea", b =>
                {
                    b.HasOne("VotingSystem.Models.Usuario", "Creador")
                        .WithMany("Asambleas")
                        .HasForeignKey("CreadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Asamblea__creado__14270015");

                    b.Navigation("Creador");
                });

            modelBuilder.Entity("VotingSystem.Models.Notificacion", b =>
                {
                    b.HasOne("VotingSystem.Models.Usuario", "Usuario")
                        .WithMany("Notificacions")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__Notificac__usuar__282DF8C2");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("VotingSystem.Models.OpcionVotacion", b =>
                {
                    b.HasOne("VotingSystem.Models.Votacion", "Votacion")
                        .WithMany("OpcionVotacions")
                        .HasForeignKey("VotacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__OpcionVot__votac__1CBC4616");

                    b.Navigation("Votacion");
                });

            modelBuilder.Entity("VotingSystem.Models.Reporte", b =>
                {
                    b.HasOne("VotingSystem.Models.Usuario", "GeneradoPorNavigation")
                        .WithMany("Reportes")
                        .HasForeignKey("GeneradoPor")
                        .IsRequired()
                        .HasConstraintName("FK__Reporte__generad__2BFE89A6");

                    b.Navigation("GeneradoPorNavigation");
                });

            modelBuilder.Entity("VotingSystem.Models.Restriccion", b =>
                {
                    b.HasOne("VotingSystem.Models.Usuario", "CreadoPorNavigation")
                        .WithMany("RestriccionCreadoPorNavigations")
                        .HasForeignKey("CreadoPor")
                        .IsRequired()
                        .HasConstraintName("FK__Restricci__cread__0F624AF8");

                    b.HasOne("VotingSystem.Models.Usuario", "Usuario")
                        .WithMany("RestriccionUsuarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Restricci__usuar__0E6E26BF");

                    b.Navigation("CreadoPorNavigation");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("VotingSystem.Models.Votacion", b =>
                {
                    b.HasOne("VotingSystem.Models.Asamblea", "Asamblea")
                        .WithMany("Votacions")
                        .HasForeignKey("AsambleaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Votacion__asambl__18EBB532");

                    b.Navigation("Asamblea");
                });

            modelBuilder.Entity("VotingSystem.Models.Voto", b =>
                {
                    b.HasOne("VotingSystem.Models.Usuario", "Usuario")
                        .WithMany("Votos")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK__Voto__usuario_id__236943A5");

                    b.HasOne("VotingSystem.Models.Votacion", "Votacion")
                        .WithMany("Votos")
                        .HasForeignKey("VotacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Voto__votacion_i__22751F6C");

                    b.Navigation("Usuario");

                    b.Navigation("Votacion");
                });

            modelBuilder.Entity("VotingSystem.Models.Asamblea", b =>
                {
                    b.Navigation("Votacions");
                });

            modelBuilder.Entity("VotingSystem.Models.Usuario", b =>
                {
                    b.Navigation("Asambleas");

                    b.Navigation("Notificacions");

                    b.Navigation("Reportes");

                    b.Navigation("RestriccionCreadoPorNavigations");

                    b.Navigation("RestriccionUsuarios");

                    b.Navigation("Votos");
                });

            modelBuilder.Entity("VotingSystem.Models.Votacion", b =>
                {
                    b.Navigation("OpcionVotacions");

                    b.Navigation("Votos");
                });
#pragma warning restore 612, 618
        }
    }
}
