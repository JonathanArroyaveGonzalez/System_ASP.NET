@model Asamblea

@{
    ViewData["Title"] = "Detalles de Asamblea";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>@ViewData["Title"]</h1>

    <div>
        <a asp-action="Index" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> Volver
        </a>
        @if (User.IsInRole("admin"))
        {
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
                <i class="fas fa-edit"></i> Editar
            </a>
        }
    </div>
</div>

<div class="card">
    <div class="card-header bg-primary text-white">
        <h3 class="card-title">@Model.Titulo</h3>
    </div>
    <div class="card-body">
        <div class="row mb-3">
            <div class="col-md-6">
                <h5><i class="fas fa-calendar-alt me-2"></i>Fecha y Hora</h5>
                <p>@Model.Fecha.ToString("dddd, dd MMMM yyyy 'a las' HH:mm")</p>
            </div>
            <div class="col-md-6">
                <h5><i class="fas fa-info-circle me-2"></i>Estado</h5>
                <span class="badge @GetStatusBadgeClass(Model.Estado)">
                    @Model.Estado
                </span>
            </div>
        </div>

        <div class="mb-3">
            <h5><i class="fas fa-align-left me-2"></i>Descripción</h5>
            <p>@Model.Descripcion</p>
        </div>

        @if (!string.IsNullOrEmpty(Model.Acta))
        {
            <div class="mb-3">
                <h5><i class="fas fa-file-alt me-2"></i>Acta</h5>
                <div class="border p-3 bg-light">
                    @Html.Raw(Model.Acta.Replace("\n", "<br />"))
                </div>
            </div>
        }

        <div class="mb-3">
            <h5><i class="fas fa-user me-2"></i>Organizada por</h5>
            <p>@Model.Creador.Nombre @Model.Creador.Apellido</p>
        </div>
    </div>
</div>

<!-- Sección de Votaciones -->
<div class="card mt-4">
    <div class="card-header bg-secondary text-white">
        <div class="d-flex justify-content-between align-items-center">
            <h3 class="card-title mb-0">Votaciones</h3>
            @if (User.IsInRole("admin") && Model.Estado != "finalizada")
            {
                <a asp-controller="Votaciones" asp-action="Create" asp-route-asambleaId="@Model.Id"
                   class="btn btn-sm btn-light">
                    <i class="fas fa-plus"></i> Nueva Votación
                </a>
            }
        </div>
    </div>
    <div class="card-body">
        @if (Model.Votacions.Any())
        {
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Título</th>
                            <th>Estado</th>
                            <th>Período</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var votacion in Model.Votacions)
                        {
                            <tr>
                                <td>@votacion.Titulo</td>
                                <td>
                                    <span class="badge @GetVotacionStatusBadgeClass(votacion.Estado)">
                                        @votacion.Estado
                                    </span>
                                </td>
                                <td>
                                    @votacion.FechaInicio.ToString("dd/MM/yyyy HH:mm") -
                                    @votacion.FechaFin.ToString("dd/MM/yyyy HH:mm")
                                </td>
                                <td>
                                    <a asp-controller="Votaciones" asp-action="Details" asp-route-id="@votacion.Id"
                                       class="btn btn-sm btn-info">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="alert alert-info">
                No hay votaciones programadas para esta asamblea.
            </div>
        }
    </div>
</div>

@functions {
    public string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "programada" => "bg-primary",
            "en_curso" => "bg-warning text-dark",
            "finalizada" => "bg-success",
            "cancelada" => "bg-danger",
            _ => "bg-secondary"
        };
    }

    public string GetVotacionStatusBadgeClass(string status)
    {
        return status switch
        {
            "pendiente" => "bg-secondary",
            "en_curso" => "bg-warning text-dark",
            "concluida" => "bg-success",
            "cancelada" => "bg-danger",
            _ => "bg-info"
        };
    }
}